// Задача 2. Счета
// 
// Создайте структуру для хранения информации о банковском счёте.
// Она должна хранить номер счёта(целое число), имя владельца(строка) и количество денег на счету(дробное число).
//
// Создайте функцию для изменения баланса счёта.Функция должна принимать экземпляр структуры банковского счёта и новую сумму.
// Попросите пользователя заполнить поля экземпляра структуры, сообщить новый баланс счёта и выведите обновлённый экземпляр структуры на консоль.
//
// Пример работы программы
// 
// Введите номер счёта : 123456789
// Введите имя владельца : Андрей
// Введите баланс : 5000
// Введите новый баланс : 6000
// Ваш счёт : Андрей, 123456789, 6000
//

#include <iostream>
#include <locale>
#include <string>

struct person
{
    std::string first_name; // имя владельца
    int bill;               // счет    
    int money;              // количество денег на счету
};

void save_money_new(person* pp, int money_new);

int main()
{
    setlocale(LC_ALL, "russian");

    person p;
    
    std::cout << "Введите номер счёта : ";
    std::cin >> p.bill;
    // Очищаем буфер до символа новой строки, т.к. если ввести например так   1d , 
    // то программа прочитает 1, а потом вместо d вернет 0 и завершится.
    std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');

    std::cout << "Введите имя владельца : ";
    std::cin >> p.first_name;

    std::cout << "Введите баланс : ";
    std::cin >> p.money;
    std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');

    int money_new;
    std::cout << "Введите новый баланс : ";
    std::cin >> money_new;
    std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');

    save_money_new(&p, money_new);

    std::cout << "Ваш счёт : " << p.first_name << ", " << p.bill << ", " << p.money << std::endl;

    return 0;
}

void save_money_new(person* pp, int money_new) {
    pp->money = money_new;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
